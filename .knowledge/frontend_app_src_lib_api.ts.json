{"is_source_file": true, "format": "TypeScript", "description": "A client-side API wrapper for interacting with the Unified Connector Platform backend. Provides functions for managing connectors, authentication, registry providers, and invoking provider tools, facilitating communication via a proxy endpoint.", "external_files": ["@/types/api"], "external_methods": [], "published": ["getConnectors", "createConnector", "deleteConnector", "getConnector", "updateConnector", "authWithApiKey", "oauthInit", "oauthCallback", "listRegistry", "upsertRegistry", "deleteRegistryProvider", "invokeTool"], "classes": [], "methods": [{"name": "async function request<T>( request", "description": "A generic helper function to perform HTTP requests via a proxy base, handling query parameters, headers, and JSON responses.", "scope": "", "scopeKind": ""}, {"name": "export async function getConnectors(tenant_id?: string | null): Promise<ApiResult<ConnectorListR/ getConnectors", "description": "Fetches a list of connectors, optionally filtered by tenant ID.", "scope": "", "scopeKind": ""}, {"name": "export async function createConnector(payload: { createConnector", "description": "Creates a new connector with specified provider, auth method, tenant, label, and configuration.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteConnector(id: string): Promise<Record<string, unknown>> { deleteConnector", "description": "Deletes a connector identified by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function getConnector(id: string): Promise<ApiResult<Connector>> { getConnector", "description": "Retrieves details of a specific connector by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function updateConnector( updateConnector", "description": "Updates label and configuration of an existing connector.", "scope": "", "scopeKind": ""}, {"name": "export async function authWithApiKey(payload: { authWithApiKey", "description": "Authenicates using an API key, returning a token reference.", "scope": "", "scopeKind": ""}, {"name": "export async function oauthInit(payload: { oauthInit", "description": "Initiates an OAuth flow, returning authorization URL and state.", "scope": "", "scopeKind": ""}, {"name": "export async function oauthCallback(payload: { oauthCallback", "description": "Completes OAuth exchange, returning token reference.", "scope": "", "scopeKind": ""}, {"name": "export async function listRegistry(apiKey?: string | null): Promise<ApiResult<RegistryListRespon/ listRegistry", "description": "Lists all registry providers, optionally secured with an API key.", "scope": "", "scopeKind": ""}, {"name": "export async function upsertRegistry( upsertRegistry", "description": "Creates or updates a registry provider entry.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteRegistryProvider(provider: string, apiKey?: string | null): Promise</ deleteRegistryProvider", "description": "Deletes a registry provider entry specified by provider name.", "scope": "", "scopeKind": ""}, {"name": "export async function invokeTool(payload: { invokeTool", "description": "Invokes a specified provider tool with given arguments via the proxy.", "scope": "", "scopeKind": ""}, {"name": "function proxyBase(): string { proxyBase", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["request", "fetch", "JSON.stringify", "JSON.parse", "Object.entries", "Object.fromEntries", "encodeURIComponent", "window.location.origin"], "search-terms": ["api.ts", "Unified Connector Platform", "proxy base", "connectors", "OAuth", "registry", "invoke tool", "REST API wrapper"], "state": 2, "file_id": 31, "knowledge_revision": 107, "git_revision": "", "revision_history": [{"102": ""}, {"106": ""}, {"107": ""}], "ctags": [{"_type": "tag", "name": "HttpMethod", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^type HttpMethod = \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\";$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "JSON", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^    const msg = isJson ? JSON.stringify(await res.json()).slice(0, 500) : await res.text();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "authWithApiKey", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function authWithApiKey(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "contentType", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const contentType = res.headers.get(\"content-type\") || \"\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function createConnector(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function deleteConnector(id: string): Promise<Record<string, unknown>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteRegistryProvider", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function deleteRegistryProvider(provider: string, apiKey?: string | null): Promise</", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function getConnector(id: string): Promise<ApiResult<Connector>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getConnectors", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function getConnectors(tenant_id?: string | null): Promise<ApiResult<ConnectorListR/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const headers: Record<string, string> = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "invokeTool", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function invokeTool(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isJson", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const isJson = contentType.includes(\"application\\/json\");$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "listRegistry", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function listRegistry(apiKey?: string | null): Promise<ApiResult<RegistryListRespon/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "msg", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^    const msg = isJson ? JSON.stringify(await res.json()).slice(0, 500) : await res.text();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "oauthCallback", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function oauthCallback(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "oauthInit", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function oauthInit(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "proxiedPath", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const proxiedPath = `${proxyBase()}${path}`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "proxyBase", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^function proxyBase(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^async function request<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const res = await fetch(url.toString(), {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updateConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function updateConnector($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "upsertRegistry", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function upsertRegistry($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const url = new URL($/", "language": "TypeScript", "kind": "constant"}], "hash": "f0ccdeb86c9aa0be0f03e4ad0b925aea", "format-version": 4, "code-base-name": "frontend_app", "filename": "frontend_app/src/lib/api.ts"}