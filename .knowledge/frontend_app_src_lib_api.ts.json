{"is_source_file": true, "format": "TypeScript", "description": "This file provides a unified API client for the Next.js frontend, offering helper functions for authentication, connector management, LLM tool invocation, and registry administration, all via fetch requests to a proxy path.", "external_files": ["@/types/api"], "external_methods": ["ApiKeyAuthResponse", "OAuthInitResponse", "OAuthCallbackResponse", "Connector", "ConnectorListResponse", "LLMToolResponse", "RegistryConnector", "RegistryListResponse", "ApiResult"], "published": ["authWithApiKey", "oauthInit", "oauthCallback", "getConnectors", "createConnector", "getConnector", "updateConnector", "deleteConnector", "invokeTool", "listRegistry", "upsertRegistry", "deleteRegistryProvider"], "classes": [], "methods": [{"name": "async function api<T = unknown>( api", "description": "Performs a fetch request to the /api/proxy endpoint, handles JSON parsing and error reporting.", "scope": "", "scopeKind": ""}, {"name": "authWithApiKey", "description": "Authenticates a tenant using API key credentials and returns a response with a token id."}, {"name": "oauthInit", "description": "Initiates an OAuth flow for a tenant and provider, returning authorization URL and state."}, {"name": "oauthCallback", "description": "Completes OAuth flow exchange, obtaining a token id."}, {"name": "getConnectors", "description": "Retrieves a list of connectors, optionally filtered by tenant_id."}, {"name": "createConnector", "description": "Creates a new connector with specified provider, auth method, and configuration."}, {"name": "getConnector", "description": "Fetches a connector by its ID."}, {"name": "updateConnector", "description": "Updates a connector's label or configuration."}, {"name": "deleteConnector", "description": "Deletes a connector by its ID."}, {"name": "invokeTool", "description": "Invokes an LLM tool via the proxy with specified provider, tool, and arguments."}, {"name": "listRegistry", "description": "Lists registry providers, optionally with an API key."}, {"name": "upsertRegistry", "description": "Creates or updates a registry provider."}, {"name": "deleteRegistryProvider", "description": "Deletes a registry provider."}], "calls": ["fetch", "URL", "console.info", "JSON.stringify", "JSON.parse", "res.headers.get", "res.json", "res.text"], "search-terms": ["API client", "Next.js", "proxy", "connectors", "registry", "oauth", "LLM tools", "auth"], "state": 2, "file_id": 36, "knowledge_revision": 137, "git_revision": "", "ctags": [{"_type": "tag", "name": "Json", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^type Json = Record<string, unknown>;$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "api", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^async function api<T = unknown>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const url = new URL(`\\/api\\/proxy${path.startsWith(\"\\/\") ? path : `\\/${path}`}`, typeof window/", "language": "TypeScript", "kind": "constant", "scope": "api", "scopeKind": "function"}], "hash": "2d483133598866a8ac20854b3c07fb36", "format-version": 4, "code-base-name": "frontend_app", "filename": "frontend_app/src/lib/api.ts", "revision_history": [{"137": ""}]}