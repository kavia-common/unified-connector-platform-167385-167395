{"is_source_file": true, "format": "TypeScript", "description": "This file serves as an API client utility module for the frontend of the Unified Connector Platform. It provides functions to interact with backend endpoints, handle environment-based URL configuration, and manage various API calls related to connectors, authentication, and registry management.", "external_files": ["@/types/api"], "external_methods": ["fetch", "JSON.parse"], "published": ["getConnectors", "createConnector", "getConnector", "updateConnector", "deleteConnector", "authWithApiKey", "oauthInit", "oauthCallback", "invokeTool", "listRegistry", "upsertRegistry", "getRegistryProvider", "deleteRegistryProvider"], "classes": [], "methods": [{"name": "function backendBase(): string { backendBase", "description": "Resolves the backend base URL from environment variables, falling back to an empty string for relative paths.", "scope": "", "scopeKind": ""}, {"name": "function buildUrl(path: string): string { buildUrl", "description": "Builds a complete URL from a given path, considering environment configuration.", "scope": "", "scopeKind": ""}, {"name": "async function http<T>(path: string, options?: RequestInit): Promise<T> { http", "description": "Performs a fetch request with JSON handling, setting headers, and error normalization.", "scope": "", "scopeKind": ""}, {"name": "function safeJson(s: string): unknown { safeJson", "description": "Safely parses a JSON string, returning the string itself if parsing fails.", "scope": "", "scopeKind": ""}, {"name": "export async function getConnectors(tenant_id?: string): Promise<ConnectorListResponse> { getConnectors", "description": "Fetches a list of connectors, optionally filtered by tenant ID, with a fallback for browser environments.", "scope": "", "scopeKind": ""}, {"name": "export async function createConnector(payload: { createConnector", "description": "Creates a new connector with specified parameters.", "scope": "", "scopeKind": ""}, {"name": "export async function getConnector(connector_id: string): Promise<Connector> { getConnector", "description": "Retrieves details of a connector given its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function updateConnector( updateConnector", "description": "Updates an existing connector identified by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteConnector(connector_id: string): Promise<Record<string, unknown>> { deleteConnector", "description": "Deletes a connector by ID.", "scope": "", "scopeKind": ""}, {"name": "export async function authWithApiKey(payload: { authWithApiKey", "description": "Performs API key-based authentication.", "scope": "", "scopeKind": ""}, {"name": "export async function oauthInit(payload: { oauthInit", "description": "Initiates OAuth authentication flow.", "scope": "", "scopeKind": ""}, {"name": "export async function oauthCallback(payload: { oauthCallback", "description": "Handles OAuth callback after user authentication.", "scope": "", "scopeKind": ""}, {"name": "export async function invokeTool(payload: { invokeTool", "description": "Proxy method to invoke an LLM tool with specified parameters.", "scope": "", "scopeKind": ""}, {"name": "export async function listRegistry(apiKey?: string | null): Promise<RegistryListResponse> { listRegistry", "description": "Lists registry entries, optionally authenticated via API key.", "scope": "", "scopeKind": ""}, {"name": "export async function upsertRegistry( upsertRegistry", "description": "Creates or updates a registry entry.", "scope": "", "scopeKind": ""}, {"name": "export async function getRegistryProvider(provider: string, apiKey?: string | null): Promise<Reg/ getRegistryProvider", "description": "Retrieves a specific registry provider detail.", "scope": "", "scopeKind": ""}, {"name": "export async function deleteRegistryProvider(provider: string, apiKey?: string | null): Promise</ deleteRegistryProvider", "description": "Deletes a registry provider.", "scope": "", "scopeKind": ""}], "calls": ["fetch", "JSON.parse", "http", "safeJson", "encodeURIComponent"], "search-terms": ["api.ts", "connectors", "OAuth", "registry", "proxy", "environment", "endpoint wrappers"], "state": 2, "file_id": 12, "knowledge_revision": 66, "git_revision": "", "revision_history": [{"29": ""}, {"57": ""}, {"66": ""}], "ctags": [{"_type": "tag", "name": "ApiError", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export type ApiError = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "authWithApiKey", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function authWithApiKey(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "backendBase", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^function backendBase(): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const base = backendBase();$/", "language": "TypeScript", "kind": "constant", "scope": "buildUrl", "scopeKind": "function"}, {"_type": "tag", "name": "body", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^    const body = json as { detail?: string; message?: string } | null;$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "buildUrl", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^function buildUrl(path: string): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "createConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function createConnector(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function deleteConnector(connector_id: string): Promise<Record<string, unknown>> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "deleteRegistryProvider", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function deleteRegistryProvider(provider: string, apiKey?: string | null): Promise</", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "env", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const env = process.env.NEXT_PUBLIC_BACKEND_URL?.trim();$/", "language": "TypeScript", "kind": "constant", "scope": "backendBase", "scopeKind": "function"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^    const err: ApiError = {$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "getConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function getConnector(connector_id: string): Promise<Connector> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getConnectors", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function getConnectors(tenant_id?: string): Promise<ConnectorListResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "getRegistryProvider", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function getRegistryProvider(provider: string, apiKey?: string | null): Promise<Reg/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^async function http<T>(path: string, options?: RequestInit): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "invokeTool", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function invokeTool(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "isBrowser", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^const isBrowser = typeof window !== \"undefined\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "json", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const json: unknown = text ? safeJson(text) : null;$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "listRegistry", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function listRegistry(apiKey?: string | null): Promise<RegistryListResponse> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^      message: body?.detail || body?.message || res.statusText || \"Request failed\",$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^    const body = json as { detail?: string; message?: string } | null;$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "oauthCallback", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function oauthCallback(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "oauthInit", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function oauthInit(payload: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "p", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const p = path.startsWith(\"\\/\") ? path : `\\/${path}`;$/", "language": "TypeScript", "kind": "constant", "scope": "buildUrl", "scopeKind": "function"}, {"_type": "tag", "name": "q", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^    const q = tenant_id ? `?tenant_id=${encodeURIComponent(tenant_id)}` : \"\";$/", "language": "TypeScript", "kind": "constant", "scope": "getConnectors", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const res = await fetch(url, {$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "safeJson", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const json: unknown = text ? safeJson(text) : null;$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "safeJson", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^function safeJson(s: string): unknown {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "text", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const text = await res.text();$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "undefined", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^      details: json ?? undefined,$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}, {"_type": "tag", "name": "updateConnector", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function updateConnector($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "upsertRegistry", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^export async function upsertRegistry($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/unified-connector-platform-167385-167395/frontend_app/src/lib/api.ts", "pattern": "/^  const url = buildUrl(path);$/", "language": "TypeScript", "kind": "constant", "scope": "http", "scopeKind": "function"}], "hash": "51393a0616aa6178128135f7bc2fe94b", "format-version": 4, "code-base-name": "frontend_app", "filename": "frontend_app/src/lib/api.ts"}